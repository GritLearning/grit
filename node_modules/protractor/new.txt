- ([192e651](https://github.com/angular/protractor/commit/192e651721258891bd8355aa2489a8a7128bcecb)) fix(examples): update examples with more tests

Add an example of dealing with lists to the example tests, and fix
the example mocha tests. Closes #192.

- ([cefcc03](https://github.com/angular/protractor/commit/cefcc037c66b30cf25468bb531612ee178b0b79a)) refactor(testapp): cleaning up the test app

Fixing old silly controller names ('MyCtrl1'), and migrating
to a function-based directory structure.

Closes #74

- ([f68befe](https://github.com/angular/protractor/commit/f68befee40de8bf4e10719daa2fc8a5d9412e70e)) docs(getting-started): link and typo fixes

- ([1429c6a](https://github.com/angular/protractor/commit/1429c6acd5c9b1adf06cbc64656d9ddb279215ea)) docs(syntax): documentation updates to go with new syntax

- ([66d62b7](https://github.com/angular/protractor/commit/66d62b709e15d6ab95857ef9254ce6c1421bba89)) chore(syntax): update example files with new syntax

- ([8c87ae6](https://github.com/angular/protractor/commit/8c87ae6b430479445744a2f5c8eaca7f5f03d61d)) fix(onPrepare): onPrepare with a string argument should resolve from the config directory

onPrepare can take a string, which is a filename containing a script to load adn execute
before any tests run. This fixes the string to resolve the filename relative to the
config file, instead of relative to the current working directory where protractor
is called.

- ([267d49d](https://github.com/angular/protractor/commit/267d49d8f38b867681c096fd1af5a6892ef7a5c0)) chore(syntax): update all other specs to the new syntax

- ([a2cd6c8](https://github.com/angular/protractor/commit/a2cd6c8baf242a81c4efea1f55249d597de95329)) feat(syntax): big syntax reboot, expose global $, $$, element, and by

In an effort to make tests more readable and clear, a few more global variables
will now be exported.

`browser` is an instance of protractor. This was previously accessed using
`protractor.getInstance`.

`by` is a collection of element locators. Previously, this was `protractor.By`.

`$` is a shortcut for getting elements by css. `$('.foo')` === `element(by.css('.foo'))`

All changes should be backwards compatible, as tested with the new 'backwardscompat'
tests.
Closes #156.

