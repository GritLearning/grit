{
  "name": "protractor",
  "description": "Webdriver E2E test wrapper for Angular.",
  "homepage": "https://github.com/angular/protractor",
  "keywords": [
    "angular",
    "test",
    "testing",
    "webdriver",
    "webdriverjs",
    "selenium"
  ],
  "author": {
    "name": "Julie Ralph",
    "email": "ju.ralph@gmail.com"
  },
  "dependencies": {
    "selenium-webdriver": "~2.35.0",
    "minijasminenode": "~0.2.4",
    "saucelabs": "~0.1.0",
    "glob": ">=3.1.14",
    "adm-zip": ">=0.4.2",
    "optimist": "~0.6.0"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "jasmine-node": "~1.9.0",
    "mocha": "~1.10.0",
    "express": "~3.3.4",
    "mustache": "~0.7.2"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/angular/protractor.git"
  },
  "bin": {
    "protractor": "bin/protractor"
  },
  "main": "lib/protractor.js",
  "scripts": {
    "test": "node lib/cli.js spec/basicConf.js; node lib/cli.js spec/altRootConf.js; node lib/cli.js spec/onPrepareConf.js; node_modules/.bin/minijasminenode jasminewd/spec/adapterSpec.js"
  },
  "license": "MIT",
  "version": "0.12.0",
  "readme": "Protractor\n==========\n\nProtractor is an end to end test framework for [AngularJS](http://angularjs.org/) applications built on top of [WebDriverJS](https://code.google.com/p/selenium/wiki/WebDriverJs).\n\nProtractor can be run as a standalone binary runner, or included into your tests as a library. Use [Protractor as a library](https://github.com/angular/protractor/blob/master/docs/library-only.md) if you would like to manage WebDriver and your test setup yourself.\n\nFor more information, [read the docs](https://github.com/angular/protractor/tree/master/docs), or head over to the [FAQ](https://github.com/angular/protractor/blob/master/docs/faq.md).\n\n\nTo run the sample tests\n-----------------------\n\nInstall protractor with.\n\n    npm install -g protractor\n\nStart up a selenium server (See the appendix below for help with this). By default, the tests expect the selenium server to be running at `http://localhost:4444/wd/hub`.\n\nThe example folder contains a simple test suite which runs against angularjs.org. Run with: \n\n    protractor example/conf.js\n\n\nUsing the Protractor runner\n---------------------------\n\nThe Protractor runner is a binary which accepts a config file. Install protractor with\n\n    npm install -g protractor\n    # Run the line below to see command line options\n    protractor\n\nYou will need a *configuration file* containing setup info and *test files* containing the actual test scripts. The config file specifies how the runner should start webdriver, where your test files are, and global setup options. The test files use Jasmine framework, but other adapters may be added in the future.\n\nCreate a configuration file - an example with detailed comments is shown in `node_modules/protractor/referenceConf.js`. Edit the configuration file to point to your test files.\n\n```javascript\n// myConf.js\nexports.config = {\n  seleniumAddress: 'http://localhost:4444/wd/hub',\n  jasmineNodeOpts: {\n    specs: ['myTest.js', 'myTestFolder/*Test.js']\n  }\n}\n```\n\nThe configuration file must specify a way to connection to webdriver. This can be\n *   `seleniumAddress`: The address of a running selenium standalone server.\n *   `seleniumServerJar`: The location of the selenium standalone .jar file on your machine. Protractor will use this to start up the selenium server.\n *   `sauceUser` and `sauceKey`: The username and key for a [SauceLabs](http://www.saucelabs.com) account. Protractor will use this to run tests on SauceLabs.\n\nThe runner exposes global variables `browser`, `by` and `element`. Check out [getting started docs](https://github.com/angular/protractor/blob/master/docs/getting-started.md) to learn how to write a test.\n\n```javascript\n// myTest.js\ndescribe('angularjs homepage', function() {\n  it('should greet the named user', function() {\n    browser.get('http://www.angularjs.org');\n\n    element(by.model('yourName')).sendKeys('Julie');\n\n    var greeting = element(by.binding('yourName'));\n\n    expect(greeting.getText()).toEqual('Hello Julie!');\n  });\n});\n```\n\nRun with\n\n    protractor myConf.js\n\n\nCloning and running Protractor's own tests\n------------------------------------------\nClone the github repository.\n\n    git clone https://github.com/angular/protractor.git\n    cd protractor\n    npm install\n\nStart up a selenium server. By default, the tests expect the selenium server to be running at `http://localhost:4444/wd/hub`.\n\nProtractor's test suite runs against the included testapp. Start that up with\n\n    cd testapp\n    ./scripts/web-server.js\n\nThen run the tests with\n\n    npm test\n\n\nAppendix A: Setting up a standalone selenium server\n---------------------------------------------------\n\nWebdriverJS does not natively include the selenium server - you must start a standalone selenium server. All you need is the latest [selenium-server-standalone.](https://code.google.com/p/selenium/downloads/list)\n\nTo use with chrome browsers, [download chromedriver](https://code.google.com/p/chromedriver/downloads/list).\n[More information about chromedriver](https://code.google.com/p/selenium/wiki/ChromeDriver)\n\nA script is included to do the download for you - run (add the --nocd option if you do not want to install ChromeDriver)\n\n    ./node_modules/protractor/bin/install_selenium_standalone\n\nStart the selenium standalone with\n\n    ./selenium/start\n\nFor alternate ways to download and start the selenium standalone, see\n[the webdriver docs](http://docs.seleniumhq.org/docs/03_webdriver.jsp#running-standalone-selenium-server-for-use-with-remotedrivers).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/angular/protractor/issues"
  },
  "_id": "protractor@0.12.0",
  "_from": "protractor@"
}
